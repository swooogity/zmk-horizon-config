/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define SYM 1
#define FUN 2

&left_encoder { status = "okay"; resolution = <2>; };

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            };
         };
    combos {
        compatible = "zmk,combos";
        combo_layer {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&mo 3>;
            };
         };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------------------------------
            // | `ESC  | Q,ESC |   W   |   E   |   R   |   T   |---------------|   Y   |   U   |   I   |   O   |   P   |   -   |
            // |  TAB  |   A   |   S   |   D   |   F   |   G   |---------------|   H   |   J   |   K   |   L   |   ;   |   '   |
            // | LSHFT |   Z   |   X   |   C   |   V   |   B   |       |       |   N   |   M   |   ,   |   .   |   /   | RSHFT |
            // | LCTRL | LALT  | LGUI  | K_APP |  TAB  |SPC/LWR|       |       |BSP/RSE| ENTER |  DEL  | RGUI  | RALT  | RCTRL |
            bindings = <
                &kp GRAVE &kp Q    &kp W    &kp E     &kp R   &kp T                          &kp Y      &kp U     &kp I     &kp O    &kp P     &kp MINUS
                &kp TAB   &kp A    &kp S    &kp D     &kp F   &kp G                          &kp H      &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
                &kp LSHFT &kp Z    &kp X    &kp C     &kp V   &kp B        &trans &trans     &kp N      &kp M     &kp COMMA &kp DOT  &kp SLASH &kp RSHFT
                &kp LCTRL &kp LALT &kp LGUI &kp K_APP &kp TAB &lt 1 SPACE  &trans &trans     &lt 2 BSPC &kp ENTER &kp DEL   &kp RGUI &kp RALT  &kp RCTRL
            >;
            
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;   // encoders
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------------------------------
            // |   ~   |   1   |   2   |   3   |   4   |   5   |---------------|   6   |   7   |   8   |   9   |   0   |   _   |
            // |  TAB  | VOLUP | LEFT  | DOWN  |  UP   | RIGHT |---------------|   -   |   _   |       |       |   :   |   "   |
            // | LSHFT | VOLDN | MUTE  | PREV  |  PP   |  NXT  |       |       |   +   |   =   |   <   |   >   |   ?   | RSHFT |
            // | LCTRL | LALT  | LGUI  | K_APP |  TAB  |SPC/LWR|       |       |BSP/RSE|  DEL  | K_APP | RGUI  | RALT  | RCTRL |
            bindings = <
                &kp TILDE &kp N1        &kp N2     &kp N3      &kp N4   &kp N5                       &kp N6     &kp N7     &kp N8    &kp N9   &kp N0    &kp UNDER
                &trans    &kp K_VOL_UP  &kp LEFT   &kp DOWN    &kp UP   &kp RIGHT                    &kp MINUS  &kp UNDER  &trans    &trans   &kp COLON &kp DQT
                &trans    &kp K_VOL_DN  &kp K_MUTE &kp C_PREV  &kp C_PP &kp C_NEXT  &trans  &trans   &kp PLUS   &kp EQUAL  &kp LT    &kp GT   &kp QMARK &trans
                &trans    &trans        &trans     &trans      &trans   &trans      &trans  &trans   &trans     &trans     &trans    &trans   &trans    &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;   // encoders
        };

        function_layer {
            // -----------------------------------------------------------------------------------------------------------------
            // |   ~   |   !   |   @   |   #   |   $   |   %   |---------------|   ^   |   &   |   *   |   (   |   )   |   -   |
            // |  F11  |  F1   |  F2   |  F3   |  F4   |  F5   |---------------|   -   |   _   |       |   {   |   }   |   |   |
            // |  F12  |  F6   |  F7   |  F8   |  F9   |  F10  |       |       |   +   |   =   |       |   [   |   ]   |   \   |
            // | LCTRL | LALT  |BT_SEL0| BT_PRV| BT_NXT|SPC/LWR|       |       |BSP/RSE|  DEL  | K_APP | RGUI  | RALT  | RCTRL |
            bindings = <
                &kp TILDE &kp EXCL &kp AT        &kp HASH    &kp DLLR   &kp PRCNT                  &kp CARET  &kp AMPS    &kp STAR  &kp LPAR  &kp RPAR  &trans
                &trans    &kp F1   &kp F2        &kp F3      &kp F4     &kp F5                     &kp MINUS  &kp UNDER   &trans    &kp LBRC  &kp RBRC  &kp PIPE
                &trans    &kp F9   &kp F10       &kp F11     &kp F12    &kp F10   &trans  &trans   &kp PLUS   &kp EQUAL   &trans    &kp LBKT  &kp RBKT  &kp BSLH
                &trans    &trans   &bt BT_SEL 0  &bt BT_PRV  &bt BT_NXT &trans    &trans  &trans   &trans     &trans      &trans    &trans    &trans    &trans
            >; 
        };
    };
};
